root = true
# EditorConfig is awesome: https://EditorConfig.org
# Based on https://github.com/dotnet/roslyn/blob/main/.editorconfig
# Code Analysis Rules overview https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/categories
# xUnit Rules overview https://xunit.net/xunit.analyzers/rules/

# top-most EditorConfig file

# Don't use tabs for indentation.
[*]
indent_style = space

# Microsoft .NET properties
csharp_new_line_before_members_in_object_initializers = false
csharp_preferred_modifier_order = public, private, protected, internal, new, abstract, virtual, sealed, override, static, readonly, extern, unsafe, volatile, async:suggestion
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:warning
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

# ReSharper properties
resharper_align_multiline_expression = true
resharper_align_multiline_for_stmt = true
resharper_blank_lines_after_control_transfer_statements = 1
resharper_blank_lines_after_multiline_statements = 1
resharper_blank_lines_around_single_line_type = 0
resharper_blank_lines_before_block_statements = 1
resharper_blank_lines_before_control_transfer_statements = 1
resharper_blank_lines_before_multiline_statements = 1
resharper_braces_for_ifelse = required_for_multiline
resharper_braces_for_using = not_required
resharper_can_use_global_alias = false
resharper_constructor_or_destructor_body = expression_body
resharper_csharp_align_multiple_declaration = true
resharper_csharp_insert_final_newline = true
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_max_line_length = 200
resharper_csharp_stick_comment = false
resharper_local_function_body = expression_body
resharper_method_or_operator_body = expression_body
resharper_object_creation_when_type_evident = explicitly_typed
resharper_place_field_attribute_on_same_line = if_owner_is_single_line

# ReSharper inspection severities
resharper_arrange_constructor_or_destructor_body_highlighting = hint
resharper_arrange_local_function_body_highlighting = hint
resharper_arrange_method_or_operator_body_highlighting = hint
resharper_arrange_object_creation_when_type_evident_highlighting = none
resharper_arrange_object_creation_when_type_not_evident_highlighting = none
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_enforce_foreach_statement_braces_highlighting = suggestion
resharper_enforce_for_statement_braces_highlighting = suggestion
resharper_enforce_if_statement_braces_highlighting = suggestion
resharper_redundant_base_qualifier_highlighting = warning
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint
# (Please don't specify an indent_size here; that has too many unintended consequences.)

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
insert_final_newline = true
charset = utf-8-bom

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# JSON files
[*.json]
indent_size = 2

# Powershell files
[*.ps1]
indent_size = 2

# Shell script files
[*.sh]
end_of_line = lf
indent_size = 2

# Dotnet code style settings:
[*.{cs,vb}]

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false
dotnet_style_namespace_match_folder = true

# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Suggest more modern language features when available
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
dotnet_style_explicit_tuple_names = true:warning

# Whitespace options
dotnet_style_allow_multiple_blank_lines_experimental = false

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are PascalCase
dotnet_naming_rule.static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.static_fields_should_be_pascal_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = pascal_case

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# error RS2008: Enable analyzer release tracking for the analyzer project containing rule '{0}'
dotnet_diagnostic.RS2008.severity = suggestion

# IDE0073: File header
dotnet_diagnostic.IDE0073.severity = warning

# IDE0035: Remove unreachable code
dotnet_diagnostic.IDE0035.severity = warning

# IDE0036: Order modifiers
dotnet_diagnostic.IDE0036.severity = warning

# IDE0043: Format string contains invalid placeholder
dotnet_diagnostic.IDE0043.severity = warning

# IDE0044: Make field readonly
dotnet_diagnostic.IDE0044.severity = warning

# RS0016: Only enable if API files are present
dotnet_public_api_analyzer.require_api_files = true

# CSharp code style settings:
[*.cs]
# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Whitespace options
csharp_style_allow_embedded_statements_on_same_line_experimental = false
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion
csharp_style_expression_bodied_operators = when_on_single_line:suggestion

# Prefer property-like constructs to have an expression-body
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Blocks are allowed
csharp_prefer_braces = false:suggestion
csharp_preserve_single_line_blocks = true:suggestion
csharp_preserve_single_line_statements = false:suggestion

# Currently only enabled for C# due to crash in VB analyzer.  VB can be enabled once
# https://github.com/dotnet/roslyn/pull/54259 has been published.
dotnet_style_allow_statement_immediately_after_block_experimental = false

# SA1200: Using directives should be placed correctly
dotnet_diagnostic.sa1200.severity = none

# SA1600: Elements should be documented
dotnet_diagnostic.sa1600.severity = none

# SA1503: Braces should not be omitted
dotnet_diagnostic.sa1503.severity = none

# SA1124: Do not use regions
dotnet_diagnostic.sa1124.severity = none

# SA1633: File should have header
dotnet_diagnostic.sa1633.severity = none

# SA1101: Prefix local calls with this
dotnet_diagnostic.sa1101.severity = none

# SA1519: Braces should not be omitted from multi-line child statement
dotnet_diagnostic.sa1519.severity = none

# IDE0090: Use 'new(...)'
csharp_style_implicit_object_creation_when_type_is_apparent = true

# IDE0090: Use 'new(...)'
dotnet_diagnostic.IDE0090.severity = none

# XUNIT1004: Test methods should not be skipped
dotnet_diagnostic.xUnit1004.severity = silent

# XUNIT2001: Do not use invalid equality check (Equal vs Equals)
dotnet_diagnostic.xUnit2001.severity = warning

# XUNIT2019: Do not use obsolete throws check to check for asynchronously thrown exception
dotnet_diagnostic.xUnit2019.severity = suggestion

# IDE0011: Add braces
csharp_prefer_braces = when_multiline:warning
# NOTE: We need the below severity entry for Add Braces due to https://github.com/dotnet/roslyn/issues/44201
dotnet_diagnostic.IDE0011.severity = warning

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = warning

# CONSIDER: Are IDE0051 and IDE0052 too noisy to be warnings for IDE editing scenarios? Should they be made build-only warnings?
# IDE0051: Remove unused private member
dotnet_diagnostic.IDE0051.severity = warning

# IDE0052: Remove unread private member
dotnet_diagnostic.IDE0052.severity = warning

# IDE0059: Unnecessary assignment to a value
dotnet_diagnostic.IDE0059.severity = warning

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = warning

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity = warning

# CA1051: Do not declare visible instance fields
dotnet_code_quality.CA1051.exclude_structs = true

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = warning

# Prefer "var" everywhere
dotnet_diagnostic.IDE0007.severity = warning
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere = true:warning

# dotnet_style_allow_multiple_blank_lines_experimental
dotnet_diagnostic.IDE2000.severity = error

# csharp_style_allow_embedded_statements_on_same_line_experimental
dotnet_diagnostic.IDE2001.severity = warning

# csharp_style_allow_blank_lines_between_consecutive_braces_experimental
dotnet_diagnostic.IDE2002.severity = error

# dotnet_style_allow_statement_immediately_after_block_experimental
dotnet_diagnostic.IDE2003.severity = error

# csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental
dotnet_diagnostic.IDE2004.severity = error

[*.cs]
# CS1591:Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = none
# SA1503: Braces should not be omitted
dotnet_diagnostic.SA1503.severity = none
# VSTHRD200: Use "Async" suffix for async methods
dotnet_diagnostic.VSTHRD200.severity = none
# SA1201: Elements should appear in the correct order
dotnet_diagnostic.SA1201.severity = none
# SA1128: Put constructor initializers on their own line
dotnet_diagnostic.SA1128.severity = silent
# SA1516: Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = silent
# SA1413: Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = none
# SA1116: Split parameters should start on line after declaration
dotnet_diagnostic.SA1116.severity = suggestion
# SA1202: Elements should be ordered by access
dotnet_diagnostic.SA1202.severity = silent
# SA1009: Closing parenthesis should be spaced correctly
dotnet_diagnostic.SA1009.severity = none
# CA1309: Use ordinal string comparison
dotnet_diagnostic.CA1309.severity = suggestion
# SA1127: Generic type constraints should be on their own line
dotnet_diagnostic.SA1127.severity = suggestion
# SA1611: Element parameters should be documented
dotnet_diagnostic.SA1611.severity = suggestion
# SA1618: Generic type parameters should be documented
dotnet_diagnostic.SA1618.severity = suggestion
# SA1615: Element return value should be documented
dotnet_diagnostic.SA1615.severity = suggestion
# SA1623: Property summary documentation should match accessors
dotnet_diagnostic.SA1623.severity = suggestion
# SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = none
# SA1204: Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = none
# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = suggestion
# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = suggestion
# Suggest "Add exception to documentation comment."
# This is quite noisy for ArgumentException/ArgumentNullException already
# indicated by type/nullability and likely <param>.
dotnet_diagnostic.RCS1140.severity = suggestion
# Suggest "Take the required action to fix the issue indicated by this 'FIXME' comment."
dotnet_diagnostic.S1134.severity = suggestion
# Suggest "Complete the task associated to this 'TODO' comment."
dotnet_diagnostic.S1135.severity = suggestion
# Suggest "Split this method into two, one handling parameters check and the other handling the asynchronous code."
# There are differing opinions about whether parameter errors should be thrown
# or returned in a faulted task.  S4457 advocates throwing.  David Fowler
# advocates returning a faulted task:
# https://github.com/davidfowl/AspNetCoreDiagnosticScenarios/blob/master/AsyncGuidance.md#prefer-asyncawait-over-directly-returning-task
# During early development, the work to split async methods is not justified.
# Prior to release, consider enforcing an approach consistently.
dotnet_diagnostic.S4457.severity = suggestion

# SA1407: Arithmetic expressions should declare precedence
dotnet_diagnostic.SA1407.severity = silent
# SA1408: Conditional expressions should declare precedence
dotnet_diagnostic.SA1408.severity = silent
# SA0001: All diagnostics of XML documentation comments has been disabled due to the current project configuration.
dotnet_diagnostic.SA0001.severity = silent
# SA1117: Parameters should be on same line or separate lines
dotnet_diagnostic.SA1117.severity = none
# The name of a parameter in C# does not begin with a lower-case letter.
# Triggered by discards - "_"
dotnet_diagnostic.SA1313.severity = none
# SA1000: Keywords should be spaced correctly
dotnet_diagnostic.SA1000.severity = none

# IDE0003: Remove qualification
dotnet_diagnostic.IDE0003.severity = warning

# Default severity for analyzer diagnostics with category 'StyleCop.CSharp.OrderingRules'
dotnet_analyzer_diagnostic.category-StyleCop.CSharp.OrderingRules.severity = silent
# Default severity for analyzer diagnostics with category 'Globalization'
dotnet_analyzer_diagnostic.category-Globalization.severity = silent

# SA1306: Field names should begin with lower-case letter. Covered by IDE1006
dotnet_diagnostic.SA1306.severity = none
# SA1300: Element should begin with upper-case letter. Covered by IDE1006
dotnet_diagnostic.SA1300.severity = none
# SA1122: Use string.Empty for empty strings. 
# NOTE: string.Empty is not constant and may not be used everywhere where "" used.
dotnet_diagnostic.SA1122.severity = suggestion

# SA1616: Element return value documentation should have text
dotnet_diagnostic.SA1616.severity = warning
# SA1111: Closing parenthesis should be on line of last parameter
dotnet_diagnostic.SA1111.severity = warning
# SA1629: Documentation text should end with a period
dotnet_diagnostic.SA1629.severity = warning
# SA1131: Use readable conditions
dotnet_diagnostic.SA1131.severity = warning
# SA1119: Statement should not use unnecessary parenthesis. Duplicates IDE0047
dotnet_diagnostic.SA1119.severity = none
# IDE0047: Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = warning
# SA1642: Constructor summary documentation should begin with standard text
dotnet_diagnostic.SA1642.severity = warning

# SA1100: Do not prefix calls with base unless local implementation exists
dotnet_diagnostic.SA1100.severity = warning
# IDE0002: Simplify Member Access
dotnet_diagnostic.IDE0002.severity = warning
# VSTHRD111: Use ConfigureAwait(bool)
dotnet_diagnostic.VSTHRD111.severity = suggestion
# IDE0059: Unnecessary assignment of a value
csharp_style_unused_value_assignment_preference = discard_variable
# SA1314: Type parameter names should begin with T
dotnet_diagnostic.SA1314.severity = silent

# SA1614: Element parameter documentation should have text
dotnet_diagnostic.SA1614.severity = warning
# SA1005: Single line comments should begin with single space
dotnet_diagnostic.SA1005.severity = warning
# SA1649: File name should match first type name
dotnet_diagnostic.SA1649.severity = warning
# SA1402: File may only contain a single type
dotnet_diagnostic.SA1402.severity = warning
# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = warning
# SA1402: File may only contain a single type
dotnet_diagnostic.SA1402.severity = warning
# SA1515: Single-line comment should be preceded by blank line
dotnet_diagnostic.SA1515.severity = warning
# IDE0130: Namespace does not match folder structure
dotnet_diagnostic.IDE0130.severity = warning
# CA1822: Make member static
dotnet_diagnostic.CA1822.severity = warning

# SA1137: Elements should have the same indentation
dotnet_diagnostic.SA1137.severity = error
# SA1025: Code should not contain multiple whitespace in a row
dotnet_diagnostic.SA1025.severity = error
# SA1001: Commas should be spaced correctly
dotnet_diagnostic.SA1001.severity = error
# SA1003: Symbols should be spaced correctly
dotnet_diagnostic.SA1003.severity = error
# SA1008: Opening parenthesis should be spaced correctly
dotnet_diagnostic.SA1008.severity = error
# SA1507: Code should not contain multiple blank lines in a row
dotnet_diagnostic.SA1507.severity = error
# SA1508: Closing braces should not be preceded by blank line
dotnet_diagnostic.SA1508.severity = error
# SA1513: Closing brace should be followed by blank line
dotnet_diagnostic.SA1513.severity = error
# SA1106: Code should not contain empty statements
dotnet_diagnostic.SA1106.severity = error

# Default severity for analyzer diagnostics with category 'StyleCop.CSharp.DocumentationRules'
dotnet_analyzer_diagnostic.category-StyleCop.CSharp.DocumentationRules.severity = warning
csharp_using_directive_placement = outside_namespace:suggestion
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = when_on_single_line:silent

[*Test*.cs]
# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = silent

[**/*Test*/**/*.cs]
# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = silent

[src/CodeStyle/**.{cs,vb}]
# warning RS0005: Do not use generic CodeAction.Create to create CodeAction
dotnet_diagnostic.RS0005.severity = none

[src/{VisualStudio}/**/*.{cs,vb}]
# CA1822: Make member static
# Not enforced as a build 'warning' for 'VisualStudio' layer due to large number of false positives from https://github.com/dotnet/roslyn-analyzers/issues/3857 and https://github.com/dotnet/roslyn-analyzers/issues/3858
# Additionally, there is a risk of accidentally breaking an internal API that partners rely on though IVT.
dotnet_diagnostic.CA1822.severity = suggestion

[*.{appxmanifest,axml,build,config,csproj,dbml,discomap,dtd,jsproj,lsproj,njsproj,nuspec,proj,props,proto,resw,resx,StyleCop,targets,tasks,vbproj,xml,xsd}]
indent_style = tab
indent_size = tab
tab_width = 4

[*.{asax,ascx,aspx,axaml,cs,cshtml,css,htm,html,js,jsx,master,paml,razor,skin,ts,tsx,vb,xaml,xamlx,xoml}]
indent_style = space
indent_size = 4
tab_width = 4
dotnet_diagnostic.CA1051.severity=suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
end_of_line = crlf
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion

[*.{json,resjson}]
indent_style = space
indent_size = 2
tab_width = 2
